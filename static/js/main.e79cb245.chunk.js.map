{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","console","log","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onClickSocial","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","editNweet","setEditNweet","onDeleteClick","window","confirm","doc","id","delete","ref","attachmentURL","toggleEditing","update","src","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","file","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e79cb245.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fBase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = event => {\n    console.log(event);\n    const {\n      target: { name, value }\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        // create account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount(prev => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"create account\" : \"log in\"}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { authService, firebaseInstance } from \"fBase\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onClickSocial = async event => {\n    const {\n      target: { name }\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      {\" \"}\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onClickSocial} name=\"google\" className=\"authBtns\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onClickSocial} name=\"github\" className=\"authBtns\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fBase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [editNweet, setEditNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.ref(nweetObj.attachmentURL).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing(prev => !prev);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: editNweet\n    });\n    setEditing(false);\n  };\n\n  const onChange = event => {\n    const {\n      target: { value }\n    } = event;\n    setEditNweet(value);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={editNweet}\n              onChange={onChange}\n              required\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"update nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentURL && (\n            <img src={nweetObj.attachmentURL} width=\"50px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { storageService, dbService } from \"fBase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    let attachmentURL = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentURL = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentURL\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = event => {\n    const {\n      target: { value }\n    } = event;\n    setNweet(value);\n  };\n\n  const onChangeFile = event => {\n    const {\n      target: { files }\n    } = event;\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onloadend = finishedEvent => {\n      const {\n        currentTarget: { result }\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const onClearAttachment = () => setAttachment();\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onChangeFile}\n        style={{\n          opacity: 0\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fBase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot(snapshot => {\n      const nweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map(nweet => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService, dbService } from \"fBase\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onChange = event => {\n    const {\n      target: { value }\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({ displayName: newDisplayName });\n    }\n    refreshUser();\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          onChange={onChange}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          style={{\n            marginTop: 10\n          }}\n        />\n      </form>\n      <button onClick={onLogOutClick} className=\"formBtn cancelBtn logOut\">\n        logout\n      </button>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"../routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\"\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fBase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: args => user.updateProfile(args)\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: args => user.updateProfile(args)\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}